name: Docker Image CI Deployment

on:
  pull_request:
    types: [closed]
    branches: [ "master" ]

jobs:
  deploy:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'CI:Deploy')
    runs-on: ubuntu-latest

    steps:
    - name: Start devnet container
      run: |
        docker pull --platform linux/amd64 krishum77/get-etherium-assignment
        docker run -d --platform linux/amd64 \
          --name devnet \
          -p 8545:8545 \
          krishum77/get-etherium-assignment

    - name: Wait for devnet to be ready
      run: |
        for i in {1..20}; do
          if curl -s http://localhost:8545 > /dev/null; then
          echo "Devnet is up!"
          break
        fi
        echo "Waiting for devnet..."
        sleep 3
        done


    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: hardhat/package-lock.json

    - name: Install dependencies
      run: |
        cd hardhat
        npm ci

    - name: Compile Contracts
      run: |
        cd hardhat
        npx hardhat compile

    - name: Deploy contracts to devnet
      run: |
        cd hardhat
        npx hardhat run scripts/deploy.js --network localhost

    - name: Copy deployment artifacts
      run: |
        mkdir -p devnet-artifacts
        cp -r hardhat/artifacts devnet-artifacts/
        cp -r hardhat/cache devnet-artifacts/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/hardhat-local-deployment
        tags: |
          type=sha,format=long
          type=ref,event=branch
          latest

      
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./hardhat/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
